<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<mapper namespace="${basepackage}.dao.${className}Dao">
	
	<select id="get" resultType="${className}">
		SELECT
			*
		FROM ${table.sqlName}
		WHERE ID = <@mapperEl "id"/>
	</select>
	
	<select id="findList" resultType="${className}">
		SELECT
			*
		FROM ${table.sqlName}
		WHERE 1 = 1
		<if test="name != null and name != ''">
	  		AND	IFNULL(NAME,'') LIKE CONCAT('%', <@mapperEl "name"/>, '%')
		</if>
		ORDER BY ID DESC
	</select>
	
	<select id="findAllList" resultType="${className}">
		SELECT
			*
		FROM ${table.sqlName}
		ORDER BY ID DESC
	</select>
		
	<insert id="insert">
		INSERT INTO ${table.sqlName} (
		<#list table.columns as column>
			${column.sqlName}<#if column_has_next>,</#if>
        </#list>
		) VALUES (
	    <#list table.columns as column>
			<@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
        </#list>
		)
	</insert>
	
	<update id="update">
		UPDATE ${table.sqlName} SET
			<#list table.notPkColumns as column>
			${column.sqlName} = <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
	        </#list>
		WHERE
			ID = <@mapperEl "id"/>
	</update>
	
	<update id="delete">
		DELETE FROM ${table.sqlName}  
		WHERE ID= <@mapperEl "id"/>
	</update>
	
</mapper>